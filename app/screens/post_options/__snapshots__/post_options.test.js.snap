// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PostOptions should match snapshot, no option for system message to user who doesn't have the permission to delete 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <ForwardRef(forwardConnectRef)
    allowStayMiddle={false}
    initialPosition={250}
    marginFromTop={350}
    onRequestClose={[Function]}
  >
    <PostOption
      icon="edit"
      isLandscape={false}
      onPress={[Function]}
      text="Edit"
    />
    <PostOption
      icon="reply"
      isLandscape={false}
      onPress={[Function]}
      text="Reply"
    />
    <PostOption
      icon="pin"
      isLandscape={false}
      onPress={[Function]}
      text="Pin to Channel"
    />
    <PostOption
      icon="emoji"
      isLandscape={false}
      onPress={[Function]}
      text="Add Reaction"
    />
  </ForwardRef(forwardConnectRef)>
</View>
`;

exports[`PostOptions should match snapshot, showing Delete option only for system message to user who has permission to delete 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <ForwardRef(forwardConnectRef)
    allowStayMiddle={false}
    initialPosition={300}
    marginFromTop={300}
    onRequestClose={[Function]}
  >
    <PostOption
      icon="edit"
      isLandscape={false}
      onPress={[Function]}
      text="Edit"
    />
    <PostOption
      icon="reply"
      isLandscape={false}
      onPress={[Function]}
      text="Reply"
    />
    <PostOption
      icon="pin"
      isLandscape={false}
      onPress={[Function]}
      text="Pin to Channel"
    />
    <PostOption
      icon="emoji"
      isLandscape={false}
      onPress={[Function]}
      text="Add Reaction"
    />
    <PostOption
      destructive={true}
      icon="trash"
      isLandscape={false}
      onPress={[Function]}
      text="Delete"
    />
  </ForwardRef(forwardConnectRef)>
</View>
`;

exports[`PostOptions should match snapshot, showing all possible options 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <ForwardRef(forwardConnectRef)
    allowStayMiddle={false}
    initialPosition={300}
    marginFromTop={300}
    onRequestClose={[Function]}
  >
    <PostOption
      icon="edit"
      isLandscape={false}
      onPress={[Function]}
      text="Edit"
    />
    <PostOption
      icon="reply"
      isLandscape={false}
      onPress={[Function]}
      text="Reply"
    />
    <PostOption
      icon="pin"
      isLandscape={false}
      onPress={[Function]}
      text="Pin to Channel"
    />
    <PostOption
      icon="emoji"
      isLandscape={false}
      onPress={[Function]}
      text="Add Reaction"
    />
    <PostOption
      destructive={true}
      icon="trash"
      isLandscape={false}
      onPress={[Function]}
      text="Delete"
    />
  </ForwardRef(forwardConnectRef)>
</View>
`;
